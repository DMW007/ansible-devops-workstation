# ToDo: Check version and update if terraform_version doesnt match the installed version
- name: "Download and extract terraform version {{ terraform_version }}"
  become: yes
  unarchive: 
    src: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip"
    remote_src: yes
    dest: /usr/local/bin
    # Avoid downloading and extracting the archive on every run for change detection
    creates: /usr/local/bin/terraform
  environment: 
    https_proxy: "{{ local_proxy_url }}"

# https://askubuntu.com/a/1089849/650986
- name: Install KVM dependencies for Ubuntu < 18.10
  become: yes
  apt:
    name: "libvirt-bin"
    state: present
  when: terraform_kvm_enabled and ansible_distribution_version is version('18.10', '<')

- name: Install KVM dependencies for Ubuntu >= 18.10
  become: yes
  apt:
    name: ["libvirt-daemon-system", "libvirt-clients"]
    state: present
  when: terraform_kvm_enabled and ansible_distribution_version is version('18.10', '>=')

- name: Install kvm
  become: yes
  apt:
    # virt-manager: GUI tool for kvm vms (usefull for dev) https://www.how2shout.com/how-to/how-to-install-virt-manager-on-ubuntu.html
    name: ["cpu-checker", "qemu-kvm", "virt-top", "libguestfs-tools", "virtinst", "bridge-utils", "virt-manager"]
    state: present
  when: terraform_kvm_enabled

- name: Check kvm acceleration to ensure VT is enabled in the bios/uefi
  become: yes
  shell: kvm-ok
  register: kvm_check
  failed_when: "'KVM acceleration can be used' not in kvm_check.stdout"
  changed_when: False
  when: terraform_kvm_enabled

- name: Make sure terraform plugin dir exists
  file: 
    path: "{{ terraform_plugin_dir }}" 
    state: directory

- name: Download and extract libvirt provider for terraform
  unarchive:
    # ToDo: Specify version by variable
    src: https://github.com/dmacvicar/terraform-provider-libvirt/releases/download/v0.6.0/terraform-provider-libvirt-0.6.0+git.1569597268.1c8597df.Ubuntu_18.04.amd64.tar.gz
    remote_src: yes
    dest: "{{ terraform_plugin_dir }}"
    creates: "{{ terraform_plugin_dir }}/terraform-provider-libvirt"
  when: terraform_kvm_enabled

- name: Check if default kvm storage pool exists
  shell: virsh pool-list --all | grep default
  register: pool_check
  ignore_errors: true
  changed_when: pool_check.rc != 0

- name: Create default kvm pool
  shell: "virsh pool-define-as --name default --type dir --target {{ kvm_default_storage_path }}; virsh pool-start default"
  when: pool_check.rc == 1

# https://github.com/jedi4ever/veewee/issues/996#issuecomment-497976612
- name: Disable security driver in qemu config
  notify: Restart libvirtd
  become: yes
  lineinfile:
    path: /etc/libvirt/qemu.conf
    line: security_driver = "none"

# ToDo: Add variable that lists images to pre-fetch
# ToDo: File doesn't get updated when original file changes
- name: Download centOS cloud image to global cache
  become: yes
  get_url:
    url: https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
    # Passing the filename to dest avoids having the file downloaded on every run, even if it already exists
    dest: /var/lib/libvirt/images/CentOS-7-x86_64-GenericCloud.qcow2